---
title: "Exercise: Aerial Photos of Hurricane Damage"
author: ""
format:
  html: default
  ipynb: default
---

Your task is to classify, using a convolutional neural network, whether an image is of a damaged or an undamaged property from aerial photographs following a hurricane.
The dataset is contained in [hurricane.zip](https://laub.au/ai/data/hurricane.zip).

![Hurricane (Source: [Zurich Insurance Group](https://www.zurich.com/en/knowledge/topics/windstorms/hurricanes-typhoons-and-tropical-cyclones-whats-the-difference))](hurricane.jpg)


I highly recommend you train on a GPU for this task. For the model I fitted, for just one epoch of training it took 13 seconds on Colab’s GPU compared to 13 minutes on Colab’s CPU (& 2 mins on my PC’s decent CPU).

# The data

Download the data first, either manually or using the `wget` and `unzip` trick from the lectures.

```{python}
# TODO
```

# Convolutional neural network

Train a convolutional neural network to solve this task.

```{python}
# TODO
```

# Data augmentation

Add in some data augmentation (that is, get Keras to make fake training data by rotating & zooming the original training images).

```{python}
# TODO
```

# Hyperparameter tuning

The second part is to use `keras-tuner` to search for at least one optimal hyperparameter (e.g. find the optimal number of filters in your first convolutional layer, and/or find the optimal number of layers to use before or after flattening the inputs).
Don't go overboard on the second one by searching over a large set of hyperparameters (unless you want to stare at progress bars for a week).

```{python}
# TODO
```
